package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetSiteFileByPathNameParams creates a new GetSiteFileByPathNameParams object
// with the default values initialized.
func NewGetSiteFileByPathNameParams() *GetSiteFileByPathNameParams {
	var ()
	return &GetSiteFileByPathNameParams{}
}

/*GetSiteFileByPathNameParams contains all the parameters to send to the API endpoint
for the get site file by path name operation typically these are written to a http.Request
*/
type GetSiteFileByPathNameParams struct {

	/*FilePath*/
	FilePath string
	/*SiteID*/
	SiteID string
}

// WithFilePath adds the filePath to the get site file by path name params
func (o *GetSiteFileByPathNameParams) WithFilePath(FilePath string) *GetSiteFileByPathNameParams {
	o.FilePath = FilePath
	return o
}

// WithSiteID adds the siteId to the get site file by path name params
func (o *GetSiteFileByPathNameParams) WithSiteID(SiteID string) *GetSiteFileByPathNameParams {
	o.SiteID = SiteID
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *GetSiteFileByPathNameParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	var res []error

	// path param file_path
	if err := r.SetPathParam("file_path", o.FilePath); err != nil {
		return err
	}

	// path param site_id
	if err := r.SetPathParam("site_id", o.SiteID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
