package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/netlify/open-api/go/models"
)

// NewCreateSiteParams creates a new CreateSiteParams object
// with the default values initialized.
func NewCreateSiteParams() *CreateSiteParams {
	var ()
	return &CreateSiteParams{}
}

/*CreateSiteParams contains all the parameters to send to the API endpoint
for the create site operation typically these are written to a http.Request
*/
type CreateSiteParams struct {

	/*ConfigureDNS*/
	ConfigureDNS *bool
	/*Site*/
	Site *models.Site
}

// WithConfigureDNS adds the configureDns to the create site params
func (o *CreateSiteParams) WithConfigureDNS(ConfigureDNS *bool) *CreateSiteParams {
	o.ConfigureDNS = ConfigureDNS
	return o
}

// WithSite adds the site to the create site params
func (o *CreateSiteParams) WithSite(Site *models.Site) *CreateSiteParams {
	o.Site = Site
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *CreateSiteParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	var res []error

	if o.ConfigureDNS != nil {

		// query param configure_dns
		var qrConfigureDNS bool
		if o.ConfigureDNS != nil {
			qrConfigureDNS = *o.ConfigureDNS
		}
		qConfigureDNS := swag.FormatBool(qrConfigureDNS)
		if qConfigureDNS != "" {
			if err := r.SetQueryParam("configure_dns", qConfigureDNS); err != nil {
				return err
			}
		}

	}

	if o.Site == nil {
		o.Site = new(models.Site)
	}

	if err := r.SetBodyParam(o.Site); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
