package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/netlify/open-api/go/models"
)

// ProvisionSiteSSLReader is a Reader for the ProvisionSiteSSL structure.
type ProvisionSiteSSLReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *ProvisionSiteSSLReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewProvisionSiteSSLOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewProvisionSiteSSLDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewProvisionSiteSSLOK creates a ProvisionSiteSSLOK with default headers values
func NewProvisionSiteSSLOK() *ProvisionSiteSSLOK {
	return &ProvisionSiteSSLOK{}
}

/*ProvisionSiteSSLOK handles this case with default header values.

OK
*/
type ProvisionSiteSSLOK struct {
}

func (o *ProvisionSiteSSLOK) Error() string {
	return fmt.Sprintf("[POST /sites/{site_id}/ssl][%d] provisionSiteSSLOK ", 200)
}

func (o *ProvisionSiteSSLOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewProvisionSiteSSLDefault creates a ProvisionSiteSSLDefault with default headers values
func NewProvisionSiteSSLDefault(code int) *ProvisionSiteSSLDefault {
	return &ProvisionSiteSSLDefault{
		_statusCode: code,
	}
}

/*ProvisionSiteSSLDefault handles this case with default header values.

error
*/
type ProvisionSiteSSLDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the provision site s s l default response
func (o *ProvisionSiteSSLDefault) Code() int {
	return o._statusCode
}

func (o *ProvisionSiteSSLDefault) Error() string {
	return fmt.Sprintf("[POST /sites/{site_id}/ssl][%d] provisionSiteSSL default  %+v", o._statusCode, o.Payload)
}

func (o *ProvisionSiteSSLDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
